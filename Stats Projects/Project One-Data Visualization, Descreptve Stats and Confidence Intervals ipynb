{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Project One: Data Visualization, Descriptive Statistics, Confidence Intervals\n",
    "\n",
    "This notebook contains the step-by-step directions for Project One. It is very important to run through the steps in order. Some steps depend on the outputs of earlier steps. Once you have completed the steps in this notebook, be sure to write your summary report. \n",
    "\n",
    "\n",
    "You are a data analyst for a basketball team and have access to a large set of historical data that you can use to analyze performance patterns. The coach of the team and your management have requested that you use descriptive statistics and data visualization techniques to study distributions of key performance metrics that are included in the data set. These data-driven analytics will help make key decisions to improve the performance of the team. You will use the Python programming language to perform the statistical analyses and then prepare a report of your findings to present for the teamâ€™s management. Since the managers are not data analysts, you will need to interpret your findings and describe their practical implications. \n",
    "\n",
    "\n",
    "There are four important variables in the data set that you will study in Project One. \n",
    "\n",
    "| <div style=\"text-align: left\"> Variable </div>  |   <div style=\"text-align: left\"> What does it represent? </div> |\n",
    "| -- | --  |\n",
    "| <div style=\"text-align: left\"> pts </div> | <div style=\"text-align: left\"> Points scored by the team in a game </div> |\n",
    "| <div style=\"text-align: left\"> elo_n </div> | <div style=\"text-align: left\"> A measure of the relative skill level of the team in the league </div> |\n",
    "| <div style=\"text-align: left\"> year_id </div> | <div style=\"text-align: left\"> Year when the team played the games </div> |\n",
    "| <div style=\"text-align: left\"> fran_id </div> | <div style=\"text-align: left\"> Name of the NBA team </div> |\n",
    "| <div style=\"text-align: left\"> game_location </div> | <div style=\"text-align: left\"> H=Home   A=Away </div> |\n",
    "\n",
    "\n",
    "The ELO rating, represented by the variable **elo_n**, is used as a measure of the relative skill of a team. This measure is inferred based on the final score of a game, the game location, and the outcome of the game relative to the probability of that outcome. The higher the number, the higher  the relative skill of a team.\n",
    "\n",
    "\n",
    "In addition to studying data on your own team, your management has assigned you a second team so that you can compare its performance with your own team's. \n",
    "\n",
    "| <div style=\"text-align: left\"> Team </div>  |   <div style=\"text-align: left\"> What does it represent? </div> |\n",
    "| -- | --  |\n",
    "| <div style=\"text-align: left\"> Your Team </div> | <div style=\"text-align: left\"> This is the team that has hired you as an analyst. This is the team that you will pick below. See Step 2.</div> |\n",
    "| <div style=\"text-align: left\"> Assigned Team </div> | <div style=\"text-align: left\"> This is the team that the management has assigned to you to compare against your team. See Step 1. </div> |\n",
    "\n",
    "\n",
    "Reminder: It may be beneficial to review the summary report template for Project One prior to starting this Python script. That will give you an idea of the questions you will need to answer with the outputs of this script.\n",
    "\n",
    "\n",
    "**--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 1: Data Preparation & the Assigned Team\n",
    "This step uploads the data set from a CSV file. It also selects the assigned team for this analysis. Do not make any changes to the code block below.\n",
    "\n",
    "1. The **assigned team** is the <font color='blue'><strong>Chicago Bulls</strong></font> from the years <font color='blue'><strong>1996-1998</strong> </font>\n",
    "\n",
    "Click the block of code below and hit the **Run** button above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_id</th>\n",
       "      <th>year_id</th>\n",
       "      <th>fran_id</th>\n",
       "      <th>pts</th>\n",
       "      <th>opp_pts</th>\n",
       "      <th>elo_n</th>\n",
       "      <th>opp_elo_n</th>\n",
       "      <th>game_location</th>\n",
       "      <th>game_result</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>199511030CHI</td>\n",
       "      <td>1996</td>\n",
       "      <td>Bulls</td>\n",
       "      <td>105</td>\n",
       "      <td>91</td>\n",
       "      <td>1598.2924</td>\n",
       "      <td>1531.7449</td>\n",
       "      <td>H</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>199511040CHI</td>\n",
       "      <td>1996</td>\n",
       "      <td>Bulls</td>\n",
       "      <td>107</td>\n",
       "      <td>85</td>\n",
       "      <td>1604.3940</td>\n",
       "      <td>1458.6415</td>\n",
       "      <td>H</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>199511070CHI</td>\n",
       "      <td>1996</td>\n",
       "      <td>Bulls</td>\n",
       "      <td>117</td>\n",
       "      <td>108</td>\n",
       "      <td>1605.7983</td>\n",
       "      <td>1310.9349</td>\n",
       "      <td>H</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>199511090CLE</td>\n",
       "      <td>1996</td>\n",
       "      <td>Bulls</td>\n",
       "      <td>106</td>\n",
       "      <td>88</td>\n",
       "      <td>1618.8701</td>\n",
       "      <td>1452.8268</td>\n",
       "      <td>A</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>199511110CHI</td>\n",
       "      <td>1996</td>\n",
       "      <td>Bulls</td>\n",
       "      <td>110</td>\n",
       "      <td>106</td>\n",
       "      <td>1621.1591</td>\n",
       "      <td>1490.2861</td>\n",
       "      <td>H</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "printed only the first five observations...\n",
      "Number of rows in the data set = 246\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import scipy.stats as st\n",
    "import matplotlib.pyplot as plt\n",
    "from IPython.display import display, HTML\n",
    "\n",
    "nba_orig_df = pd.read_csv('nbaallelo.csv')\n",
    "nba_orig_df = nba_orig_df[(nba_orig_df['lg_id']=='NBA') & (nba_orig_df['is_playoffs']==0)]\n",
    "columns_to_keep = ['game_id','year_id','fran_id','pts','opp_pts','elo_n','opp_elo_n', 'game_location', 'game_result']\n",
    "nba_orig_df = nba_orig_df[columns_to_keep]\n",
    "\n",
    "# The dataframe for the assigned team is called assigned_team_df. \n",
    "# The assigned team is the Chicago Bulls from 1996-1998.\n",
    "assigned_years_league_df = nba_orig_df[(nba_orig_df['year_id'].between(1996, 1998))]\n",
    "assigned_team_df = assigned_years_league_df[(assigned_years_league_df['fran_id']=='Bulls')]\n",
    "assigned_team_df = assigned_team_df.reset_index(drop=True)\n",
    "\n",
    "display(HTML(assigned_team_df.head().to_html()))\n",
    "print(\"printed only the first five observations...\")\n",
    "print(\"Number of rows in the data set =\", len(assigned_team_df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 2: Pick Your Team\n",
    "In this step, you will pick your team. The range of years that you will study for your team is <font color='blue'><strong>2013-2015</strong></font>. Make the following edits to the code block below:\n",
    "\n",
    "1. <font color='red'> Replace <strong>??TEAM??</strong> with your choice of team from one of the following team names. </font>  \n",
    "<font color='blue'>*Bucks, Bulls, Cavaliers, Celtics, Clippers, Grizzlies, Hawks, Heat, Jazz, Kings, Knicks, Lakers, Magic, Mavericks, Nets, Nuggets, Pacers, Pelicans, Pistons, Raptors, Rockets, Sixers, Spurs, Suns, Thunder, Timberwolves, Trailblazers, Warriors, Wizards*</font>    \n",
    "Remember to enter the team name within single quotes. For example, if you picked the Suns, then ??TEAM?? should be replaced with 'Suns'.  \n",
    "\n",
    "After you are done with your edits, click the block of code below and hit the **Run** button above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_id</th>\n",
       "      <th>year_id</th>\n",
       "      <th>fran_id</th>\n",
       "      <th>pts</th>\n",
       "      <th>opp_pts</th>\n",
       "      <th>elo_n</th>\n",
       "      <th>opp_elo_n</th>\n",
       "      <th>game_location</th>\n",
       "      <th>game_result</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>201210300MIA</td>\n",
       "      <td>2013</td>\n",
       "      <td>Celtics</td>\n",
       "      <td>107</td>\n",
       "      <td>120</td>\n",
       "      <td>1586.1121</td>\n",
       "      <td>1666.3193</td>\n",
       "      <td>A</td>\n",
       "      <td>L</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>201211020BOS</td>\n",
       "      <td>2013</td>\n",
       "      <td>Celtics</td>\n",
       "      <td>88</td>\n",
       "      <td>99</td>\n",
       "      <td>1566.8929</td>\n",
       "      <td>1520.3861</td>\n",
       "      <td>H</td>\n",
       "      <td>L</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>201211030WAS</td>\n",
       "      <td>2013</td>\n",
       "      <td>Celtics</td>\n",
       "      <td>89</td>\n",
       "      <td>86</td>\n",
       "      <td>1571.9491</td>\n",
       "      <td>1435.2531</td>\n",
       "      <td>A</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>201211070BOS</td>\n",
       "      <td>2013</td>\n",
       "      <td>Celtics</td>\n",
       "      <td>100</td>\n",
       "      <td>94</td>\n",
       "      <td>1574.5995</td>\n",
       "      <td>1432.6027</td>\n",
       "      <td>H</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>201211090BOS</td>\n",
       "      <td>2013</td>\n",
       "      <td>Celtics</td>\n",
       "      <td>100</td>\n",
       "      <td>106</td>\n",
       "      <td>1562.3982</td>\n",
       "      <td>1541.7600</td>\n",
       "      <td>H</td>\n",
       "      <td>L</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "printed only the first five observations...\n",
      "Number of rows in the data set = 245\n"
     ]
    }
   ],
   "source": [
    "# Range of years: 2013-2015 (Note: The line below selects ALL teams within the three-year period 2013-2015. This is not your team's dataframe.\n",
    "your_years_leagues_df = nba_orig_df[(nba_orig_df['year_id'].between(2013, 2015))]\n",
    "\n",
    "# The dataframe for your team is called your_team_df.\n",
    "# ---- TODO: make your edits here ----\n",
    "your_team_df = your_years_leagues_df[(your_years_leagues_df['fran_id']== 'Celtics')]\n",
    "your_team_df = your_team_df.reset_index(drop=True)\n",
    "\n",
    "display(HTML(your_team_df.head().to_html()))\n",
    "print(\"printed only the first five observations...\")\n",
    "print(\"Number of rows in the data set =\", len(your_team_df))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 3: Data Visualization: Points Scored by Your Team\n",
    "The coach has requested that you provide a visual that shows the distribution of points scored by your team in the years 2013-2015. The code below provides two possible options. Pick **ONE** of these two plots to include in your summary report. Choose the plot that you think provides the best visual for the distribution of points scored by your team. In your summary report, you must explain why you think your visual is the best choice.\n",
    "\n",
    "\n",
    "Click the block of code below and hit the **Run** button above.  \n",
    "NOTE: If the plots are not created, click the code section and hit the **Run** button again."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "# Histogram\n",
    "fig, ax = plt.subplots()\n",
    "plt.hist(your_team_df['pts'], bins=20)\n",
    "plt.title('Histogram of points scored by Your Team in 2013 to 2015', fontsize=18)\n",
    "ax.set_xlabel('Points')\n",
    "ax.set_ylabel('Frequency')\n",
    "plt.show()\n",
    "print(\"\")\n",
    "\n",
    "# Scatterplot\n",
    "plt.title('Scatterplot of points scored by Your Team in 2013 to 2015', fontsize=18)\n",
    "sns.regplot(your_team_df['year_id'], your_team_df['pts'], ci=None)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 4: Data Visualization: Points Scored by the Assigned Team\n",
    "The coach has also requested that you provide a visual that shows a distribution of points scored by the Bulls from years 1996-1998. The code below provides two possible options. Pick **ONE** of these two plots to include in your summary report. Choose the plot that you think provides the best visual for the distribution of points scored by your team. In your summary report, you will explain why you think your visual is the best choice.\n",
    "\n",
    "\n",
    "Click the block of code below and hit the **Run** button above.  \n",
    "NOTE: If the plots are not created, click the code section and hit the **Run** button again."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "# Histogram\n",
    "fig, ax = plt.subplots()\n",
    "plt.hist(assigned_team_df['pts'], bins=20)\n",
    "plt.title('Histogram of points scored by the Bulls in 1996 to 1998', fontsize=18)\n",
    "ax.set_xlabel('Points')\n",
    "ax.set_ylabel('Frequency')\n",
    "plt.show()\n",
    "\n",
    "# Scatterplot\n",
    "plt.title('Scatterplot of points scored by the Bulls in 1996 to 1998', fontsize=18)\n",
    "sns.regplot(assigned_team_df['year_id'], assigned_team_df['pts'], ci=None)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 5: Data Visualization: Comparing the Two Teams\n",
    "Now the coach wants you to prepare one plot that provides a visual of the differences in the distribution of points scored by the assigned team and your team. The code below provides two possible visuals. Choose the plot that allows for the best comparison of the data distributions.\n",
    "\n",
    "\n",
    "Click the block of code below and hit the **Run** button above.  \n",
    "NOTE: If the plots are not created, click the code section and hit the **Run** button again."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "# Side-by-side boxplots\n",
    "both_teams_df = pd.concat((assigned_team_df, your_team_df))\n",
    "plt.title('Boxplot to compare points distribution', fontsize=18) \n",
    "sns.boxplot(x='fran_id',y='pts',data=both_teams_df)\n",
    "plt.show()\n",
    "print(\"\")\n",
    "\n",
    "# Histograms\n",
    "fig, ax = plt.subplots()\n",
    "plt.hist(assigned_team_df['pts'], 20, alpha=0.5, label='Assigned Team')\n",
    "plt.hist(your_team_df['pts'], 20, alpha=0.5, label='Your Team')\n",
    "plt.title('Histogram to compare points distribution', fontsize=18) \n",
    "plt.xlabel('Points')\n",
    "plt.legend(loc='upper right')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 6: Descriptive Statistics: Points Scored By Your Time in Home Games\n",
    "The management of your team wants you to run descriptive statistics on the points scored by your team in the games played at your team's venue in 2013-2015. Calculate descriptive statistics including the mean, median, variance, and standard deviation for points scored by your team played at Home. Make the following edits to the code block below:\n",
    "\n",
    "1. <font color='red'> Replace <strong>??MEAN_FUNCTION??</strong> with the name of Python function that calculates the mean. </font>\n",
    "2. <font color='red'> Replace <strong>??MEDIAN_FUNCTION??</strong> with the name of Python function that calculates the median. </font>\n",
    "3. <font color='red'> Replace <strong>??VAR_FUNCTION??</strong> with the name of Python function that calculates the variance. </font>\n",
    "4. <font color='red'> Replace <strong>??STD_FUNCTION??</strong> with the name of Python function that calculates the standard deviation. </font>\n",
    "\n",
    "After you are done with your edits, click the block of code below and hit the **Run** button above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Points Scored by Your Team in Home Games (2013 to 2015)\n",
      "-------------------------------------------------------\n",
      "Mean = 98.82\n",
      "Median = 99.5\n",
      "Variance = 107.67\n",
      "Standard Deviation = 10.38\n"
     ]
    }
   ],
   "source": [
    "print(\"Points Scored by Your Team in Home Games (2013 to 2015)\")\n",
    "print(\"-------------------------------------------------------\")\n",
    "\n",
    "your_team_home_df = your_team_df[your_team_df['game_location']=='H'].copy()\n",
    "\n",
    "# ---- TODO: make your edits here ----\n",
    "mean = your_team_home_df['pts'].mean()\n",
    "median = your_team_home_df['pts'].median()\n",
    "variance = your_team_home_df['pts'].var()\n",
    "stdeviation = your_team_home_df['pts'].std()\n",
    "\n",
    "print('Mean =', round(mean,2))\n",
    "print('Median =', round(median,2))\n",
    "print('Variance =', round(variance,2))\n",
    "print('Standard Deviation =', round(stdeviation,2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 7 - Descriptive Statistics - Points Scored By Your Time in Away Games\n",
    "The management also wants you to run descriptive statistics on the points scored by your team in games played at opponent's venue (Away) in 2013-2015. They want you to analyze measures of central tendency (e.g. mean, median) and measures of spread (e.g. standard deviation) in explaining if the team is doing better in Home games compared to Away games. Calculate descriptive statistics including the mean, median, variance, and standard deviation for points scored by your team played in opponent's venue (Away). Make the following edits to the code block below: \n",
    "\n",
    "<font><strong>You are to write this code block yourself.</strong></font> \n",
    "\n",
    "Use Step 6 to help you write this code block. Here is some information that will help you write this code block.\n",
    "1. <font color='red'> Since you are calculating statistics for games played at opponent's venue, game_location variable should be set to 'A'. </font>\n",
    "2. <font color='red'> Functions for all statistics are the same as those in step 6. </font>\n",
    "3. <font color='red'> Your statistics should be rounded to two decimal places. </font>\n",
    "\n",
    "Write your code in the code block section below. After you are done, click this block of code and hit the **Run** button above. Reach out to your instructor if you need more help with this step."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Points Scored by Your Team in Away Games (2013 to 2015)\n",
      "-------------------------------------------------------\n",
      "Mean = 97.28\n",
      "Median = 96.0\n",
      "Variance = 121.43\n",
      "Standard Deviation = 11.02\n"
     ]
    }
   ],
   "source": [
    "# Write your code in this code block. \n",
    "print(\"Points Scored by Your Team in Away Games (2013 to 2015)\")\n",
    "print(\"-------------------------------------------------------\")\n",
    "\n",
    "your_team_home_df = your_team_df[your_team_df['game_location']=='A'].copy()\n",
    "\n",
    "# ---- TODO: make your edits here ----\n",
    "mean_A = your_team_home_df['pts'].mean()\n",
    "median_A = your_team_home_df['pts'].median()\n",
    "variance_A = your_team_home_df['pts'].var()\n",
    "stdeviation_A = your_team_home_df['pts'].std()\n",
    "\n",
    "print('Mean =', round(mean_A,2))\n",
    "print('Median =', round(median_A,2))\n",
    "print('Variance =', round(variance_A,2))\n",
    "print('Standard Deviation =', round(stdeviation_A,2))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 8: Confidence Intervals for the Average Relative Skill of All Teams in Your Team's Years\n",
    "The management wants to you to calculate a 95% confidence interval for the average relative skill of all teams in 2013-2015. You will use the variable 'elo_n' to respresent the relative skill of the teams. To construct a confidence interval, you will need the mean and standard error of the relative skill level in these years. The code block below calculates the mean and the standard deviation. Your edits will calculate the standard error and the confidence interval. Make the following edits to the code block below:\n",
    "\n",
    "1. <font color='red'> Replace <strong>??SD_VARIABLE??</strong> with the variable name representing the standard deviation of relative skill of all teams from your years. </font> (Hint: the *standard deviation* variable is in the code block below)\n",
    "2. <font color='red'> Replace <strong>??CL??</strong> with the confidence level of the confidence interval. </font>\n",
    "3. <font color='red'> Replace <strong>??MEAN_VARIABLE??</strong> with the variable name representing the mean relative skill of all teams from your years. </font> (Hint: the *mean* variable is in the code block below)\n",
    "4. <font color='red'> Replace <strong>??SE_VARIABLE??</strong> with the variable name representing the standard error. </font> (Hint: the *standard error* variable is in the code block below)\n",
    "\n",
    "\n",
    "The management also wants you to calculate the probability that a team in the league has a relative skill level less than that of the team that you picked. Assuming that the relative skill of teams is Normally distributed, Python methods for a Normal distribution can be used to answer this question. The code block below uses two of these Python methods. Your task is to identify the correct Python method and report the probability. \n",
    "\n",
    "After you are done with your edits, click the block of code below and hit the **Run** button above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confidence Interval for Average Relative Skill in the years 2013 to 2015\n",
      "------------------------------------------------------------------------------------------------------------\n",
      "95% confidence interval (unrounded) for Average Relative Skill (ELO) in the years 2013 to 2015 = (1502.0236894390478, 1507.1824625533618)\n",
      "95% confidence interval (rounded) for Average Relative Skill (ELO) in the years 2013 to 2015 = ( 1502.02 , 1507.18 )\n",
      "\n",
      "\n",
      "Probability a team has Average Relative Skill LESS than the Average Relative Skill (ELO) of your team in the years 2013 to 2015\n",
      "----------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "Which of the two choices is correct?\n",
      "Choice 1 = 0.6639\n",
      "Choice 2 = 0.3361\n"
     ]
    }
   ],
   "source": [
    "print(\"Confidence Interval for Average Relative Skill in the years 2013 to 2015\")\n",
    "print(\"------------------------------------------------------------------------------------------------------------\")\n",
    "\n",
    "# Mean relative skill of all teams from the years 2013-2015\n",
    "mean = your_years_leagues_df['elo_n'].mean()\n",
    "\n",
    "# Standard deviation of the relative skill of all teams from the years 2013-2015\n",
    "stdev = your_years_leagues_df['elo_n'].std()\n",
    "\n",
    "n = len(your_years_leagues_df)\n",
    "\n",
    "#Confidence interval\n",
    "# ---- TODO: make your edits here ----\n",
    "stderr = stdev/(n ** 0.5)\n",
    "conf_int_95 = st.norm.interval(0.95, mean, stderr)\n",
    "\n",
    "print(\"95% confidence interval (unrounded) for Average Relative Skill (ELO) in the years 2013 to 2015 =\", conf_int_95)\n",
    "print(\"95% confidence interval (rounded) for Average Relative Skill (ELO) in the years 2013 to 2015 = (\",  round(conf_int_95[0], 2),\",\", round(conf_int_95[1], 2),\")\")\n",
    "\n",
    "\n",
    "print(\"\\n\")\n",
    "print(\"Probability a team has Average Relative Skill LESS than the Average Relative Skill (ELO) of your team in the years 2013 to 2015\")\n",
    "print(\"----------------------------------------------------------------------------------------------------------------------------------------------------------\")\n",
    "\n",
    "mean_elo_your_team = your_team_df['elo_n'].mean()\n",
    "\n",
    "choice1 = st.norm.sf(mean_elo_your_team, mean, stdev)\n",
    "choice2 = st.norm.cdf(mean_elo_your_team, mean, stdev) #This option return the probability of Z being less or equal. \n",
    "\n",
    "# Pick the correct answer.\n",
    "print(\"Which of the two choices is correct?\")\n",
    "print(\"Choice 1 =\", round(choice1,4))\n",
    "print(\"Choice 2 =\", round(choice2,4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 9 - Confidence Intervals  for the Average Relative Skill of All Teams in the Assigned Team's Years\n",
    "The management also wants to you to calculate a 95% confidence interval for the average relative skill of all teams in the years 1996-1998. Calculate this confidence interval. \n",
    "\n",
    "<font><strong>You are to write this code block yourself.</strong></font> \n",
    "\n",
    "Use Step 8 to help you write this code block. Here is some information that will help you write this code block. Reach out to your instructor if you need help.\n",
    "\n",
    "1. <font color='red'> The dataframe for the years 1996-1998 is called assigned_years_league_df </font>\n",
    "2. <font color='red'> The variable 'elo_n' represents the relative skill of teams. </font>\n",
    "3. <font color='red'> Start by calculating the mean and the standard deviation of relative skill (ELO) in years 1996-1998. </font>\n",
    "4. <font color='red'> Calculate n that represents the sample size. </font>\n",
    "5. <font color='red'> Calculate the standard error which is equal to the standard deviation of Relative Skill (ELO) divided by the square root of the sample size n. </font>\n",
    "6. <font color='red'>  Assuming that the population standard deviation is known, use Python methods for the Normal distribution to calculate the confidence interval. </font>\n",
    "7. <font color='red'> Your statistics should be rounded to two decimal places. </font>\n",
    "\n",
    "The management also wants you to calculate the probability that a team had a relative skill level less than the Bulls in years 1996-1998. Assuming that the relative skill of teams is Normally distributed, calculate this probability. \n",
    "\n",
    "<font><strong>You are to write this code block yourself.</strong></font> \n",
    "\n",
    "Use Step 8 to help you write this code block. Here is some information that will help you write this code block.\n",
    "\n",
    "1. <font color='red'> Calculate the mean relative skill of the Bulls. Note that the dataframe for the Bulls is called assigned_team_df. The variable 'elo_n' represents the relative skill. </font>\n",
    "2. <font color='red'> Use Python methods for a Normal distribution to calculate this probability. </font>\n",
    "3. <font color='red'> The probability value should be rounded to four decimal places. </font>\n",
    "\n",
    "\n",
    "Write your code in the code block section below. After you are done, click this block of code and hit the **Run** button above. Reach out to your instructor if you need more help with this step."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confidence Interval for Average Relative Skill in the years 1996 to 1998\n",
      "------------------------------------------------------------------------------------------------------------\n",
      "95% confidence interval (unrounded) for Average Relative Skill (ELO) in the years 1996 to 1998 = (1487.6565859527095, 1493.6465501840999)\n",
      "95% confidence interval (rounded) for Average Relative Skill (ELO) in the years 1996 to 1998 = ( 1487.66 , 1493.65 )\n",
      "\n",
      "\n",
      "Probability a team has Average Relative Skill LESS than the Average Relative Skill (ELO) of your team in the years 1996 to 1998\n",
      "----------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "Probability = 0.9732\n"
     ]
    }
   ],
   "source": [
    "# Write your code in this code block section\n",
    "print(\"Confidence Interval for Average Relative Skill in the years 1996 to 1998\")\n",
    "print(\"------------------------------------------------------------------------------------------------------------\")\n",
    "\n",
    "# Mean relative skill of all teams from the years 1996 to 1998\n",
    "mean_assigned_team_league = assigned_years_league_df['elo_n'].mean()\n",
    "\n",
    "# Standard deviation of the relative skill of all teams from the years 1996 to 1998\n",
    "stdev_assigned_years_league_df = assigned_years_league_df['elo_n'].std()\n",
    "\n",
    "n_assigned_team_league = len(assigned_years_league_df)\n",
    "\n",
    "#Confidence interval\n",
    "stderr_assigned_team_league = stdev_assigned_years_league_df/(n_assigned_team_league ** 0.5)\n",
    "conf_int_95_assigned_team_league = st.norm.interval(0.95, mean_assigned_team_league, stderr_assigned_team_league)\n",
    "\n",
    "print(\"95% confidence interval (unrounded) for Average Relative Skill (ELO) in the years 1996 to 1998 =\", conf_int_95_assigned_team_league)\n",
    "print(\"95% confidence interval (rounded) for Average Relative Skill (ELO) in the years 1996 to 1998 = (\",  round(conf_int_95_assigned_team_league[0], 2),\",\", round(conf_int_95_assigned_team_league[1], 2),\")\")\n",
    "\n",
    "\n",
    "print(\"\\n\")\n",
    "print(\"Probability a team has Average Relative Skill LESS than the Average Relative Skill (ELO) of your team in the years 1996 to 1998\")\n",
    "print(\"----------------------------------------------------------------------------------------------------------------------------------------------------------\")\n",
    "\n",
    "#Bull's ELO mean\n",
    "mean_elo_assigned_team= assigned_team_df['elo_n'].mean() \n",
    "\n",
    "probability = st.norm.cdf(mean_elo_assigned_team, mean_assigned_team_league, stdev_assigned_years_league_df) #This option return the probability of Z being less or equal. \n",
    "\n",
    "# Print the probability of a given team have an average skill being less or equal to the Bull'S TEAM\n",
    "print(\"Probability =\", round(probability,4))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## End of Project One\n",
    "Download the HTML output and submit it with your summary report for Project One. The HTML output can be downloaded by clicking **File**, then **Download as**, then **HTML**. Do not include the Python code within your summary report."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
